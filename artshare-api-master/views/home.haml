%h1 The Art Share API

%p
  The Art Share API is designed to allow its end users, developers, to start and end user sessions with the system and do all of the basic CRUD (Create, Read, Update, Destroy) actions on users and paintings. A user can have many paintings, so the paintings resource is nested beneath the users resource.

%p
  This API follows RESTful routing practices and returns JSON as a response.

%p
  Here is a basic API reference using AJAX call examples.

%p
  Remember that these calls can also be made from a &lt;form&gt;.

%p
  All API calls are prefixed with /api/v1. At this point there is no authentication or key required to make calls to this API.

%p
  The server can be run by cd-ing to the project directory and typing "rackup".


%h2 Sessions

%h3 Log out a user

%pre{'data-enlighter-language' => "js"}
  :preserve
    $.ajax({
      type: "GET",
      url: "/api/v1/sessions/destroy"
    })

%h3 Log in a user

%pre{'data-enlighter-language' => "js"}
  :preserve
    $.ajax({
      type: "POST",
      url: "/api/v1/sessions/new",
      data: {
        email: "zachfeldman@gmail.com",
        password: "password"
      }
    })

%h3 Get the currently logged in user

%pre{'data-enlighter-language' => "js"}
  :preserve
    $.ajax({
      type: "GET",
      url: "/api/v1/sessions/"
    })


%h2 Users

%h3 List all users

%pre{'data-enlighter-language' => "js"}
  :preserve
    $.ajax({
      type: "GET",
      url: "/api/v1/users/
    "})


%h3 Create a new user
%pre{'data-enlighter-language' => "js"}
  :preserve
    $.ajax({
      type: "POST",
      url: "/api/v1/users/",
      data:{
        user: {
          fname: "Test",
          lname: "Johnson",
          password: "passw0rd",
          email: "test2@johnson.com"
        }
      }
    })


%h3 Retrieve details on a user

%pre{'data-enlighter-language' => "js"}
  :preserve
    $.ajax({
      type: "GET",
      url: "/api/v1/users/11
    "})


%h3 Update a user

%pre{'data-enlighter-language' => "js"}
  :preserve
    $.ajax({
      type: "PUT",
      url: "/api/v1/users/11",
      data: {
        user: {
          fname: "Test",
          lname: "Johnson",
          password: "passw0rd",
          email: "test100@johnson.com"
        }
      }
    })


%h3 Delete a user

%pre{'data-enlighter-language' => "js"}
  :preserve
    $.ajax({
      type: "DELETE",
      url: "/api/v1/users/11"
    })


%h2 Paintings 

%h3 List all paintings for a user

%pre{'data-enlighter-language' => "js"}
  :preserve
    $.ajax({
      type: "GET",
      url: "/api/v1/users/1/paintings/
    "})

%h3 Create a new painting for a user

%pre{'data-enlighter-language' => "js"}
  :preserve
    $.ajax({
      type: "POST",
      url: "/api/v1/users/1/paintings/",
      data:{
        painting: {
          image_url: "http://aylfs.com/Uploads/dd2c6c50-c8c9-4193-8fe4-c7e0d135e42c.jpg",
          name: "The Wonderful"
        }
      }
    })


%h3 Retrieve painting details

%pre{'data-enlighter-language' => "js"}
  :preserve
    $.ajax({
      type: "GET",
      url: "/api/v1/users/1/paintings/2"
    })


%h3 List all paintings for a user

%pre{'data-enlighter-language' => "js"}
  :preserve
    $.ajax({
      type: "GET",
      url: "/api/v1/users/1/paintings/1
    "})

%h3 Update a user's painting

%pre{'data-enlighter-language' => "js"}
  :preserve
    $.ajax({
      type: "PUT",
      url: "/api/v1/users/1/paintings/1",
      data: {
        painting: {
          image_url: "http://aylfs.com/Uploads/dd2c6c50-c8c9-4193-8fe4-c7e0d135e42c.jpg", 
          name: "The Wonderful 2"
        }
      }
    })

%h3 Delete a user's painting

%pre{'data-enlighter-language' => "js"}
  :preserve
    $.ajax({
      type: "DELETE",
      url: "/api/v1/users/1/paintings/1
    "})

